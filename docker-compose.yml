services:
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scholar-notification-service
    env_file:
      - .env
    ports:
      - "${SERVER_PORT:-8082}:${SERVER_PORT:-8082}"
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
    networks:
      - scholarai-network
    restart: unless-stopped
    # Will connect to existing infrastructure via network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT:-8082}/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Note: notification-postgres is already running from meta/Scripts/docker.sh
# This service will connect to the existing notification-db container

# Note: rabbitmq is already running from meta/Scripts/docker.sh
# This service will connect to the existing user-rabbitmq container

# Note: service-registry is already running from the main orchestration
# This service will connect to the existing service-registry container

# Volumes are managed by meta/Scripts/docker.sh

networks:
  scholarai-network:
    external: true
    name: docker_scholarai-network
