spring:
  application:
    name: notification-service
  cloud:
    discovery:
      enabled: true
    inetutils:
      preferred-networks: 127.0.0.1
      ignored-interfaces: ".*"
  datasource:
    url: jdbc:postgresql://notification-db:5432/notificationDB
    username: ${NOTIFICATION_DB_USER}
    password: ${NOTIFICATION_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 3
      maximum-pool-size: 5
eureka:
  client:
    service-url:
      defaultZone: http://service-registry:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: notification-service
    instance-id: ${spring.application.name}:${server.port}
    appname: ${spring.application.name}
    secure-port-enabled: false
    non-secure-port-enabled: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
  
  # Flyway configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: false
    out-of-order: false
    table: flyway_schema_history
    baseline-version: 0
    baseline-description: "Initial baseline"
    placeholders:
      uuid_type: UUID
      uuid_default: DEFAULT gen_random_uuid()
  
  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true

  rabbitmq:
    host: user-rabbitmq
    port: 5672
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}

  # Email Configuration (Gmail SMTP) - Simplified for now
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_ADDRESS:}
    password: ${GMAIL_APP_PASSWORD:}
    protocol: smtp

rabbitmq:
  notification:
    queue:
      name: notification-queue
    exchange:
      name: notification-exchange
    routing:
      key: notification-routing-key

server:
  port: 8082
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false


management:
  info:
    git:
      mode: full
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  metrics:
    tags:
      application: "${spring.application.name}"
  tracing:
    enabled: false
    sampling:
      probability: 1

springdoc:
  api-docs:
    enabled: true
  show-actuator: true
  use-management-port: false
  swagger-ui:
    path: /docs
    # Enable authorization persistence in browser
    persistAuthorization: true
    # Enable deep linking for swagger operations
    deepLinking: true
    # Display request duration in swagger UI
    displayRequestDuration: true
    # Enable filtering of operations
    filter: true
    # Show common extensions
    showExtensions: true
    # Sort operations alphabetically
    operationsSorter: alpha
    # Sort tags alphabetically
    tagsSorter: alpha
    # Enable try it out by default
    tryItOutEnabled: true
    # Custom configuration
    disable-swagger-default-url: true


cors:
  allowed-origins: "https://localhost:3000,https://example.com"

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.security: DEBUG
